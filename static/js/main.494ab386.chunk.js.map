{"version":3,"sources":["helpers/api.ts","components/TodoCard/TodoCard.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["getAll","url","fetch","then","response","json","TodoCard","todo","className","title","user","name","completed","TodoList","todoList","map","key","id","App","useState","todos","setTodos","isLoading","setIsLoading","errorMessage","setErrorMessage","handleLoadClick","a","todosFromServer","usersFromServer","todosWithUsers","find","userId","length","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"iUAeMA,G,MAAS,SAAIC,GACjB,OAAOC,MAhBO,iEAgBSD,GACpBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YCTlBC,G,MAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,wBAAIC,UAAU,cACZ,wBAAIA,UAAU,mBAAmBD,EAAKE,OACtC,uBAAGD,UAAU,cAAcD,EAAKG,KAAMH,EAAKG,KAAKC,KAAO,WACtDJ,EAAKK,UACF,yBAAKJ,UAAU,8BAAf,aACA,yBAAKA,UAAU,+BAAf,oBCLKK,G,MAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvC,wBAAIN,UAAU,cACXM,EAASC,KAAI,SAACR,GAAD,OACZ,kBAAC,EAAD,CAAUA,KAAMA,EAAMS,IAAKT,EAAKU,WC2CvBC,EAjDH,WAAO,IAAD,EACUC,mBAAiB,IAD3B,mBACTC,EADS,KACFC,EADE,OAEkBF,oBAAS,GAF3B,mBAETG,EAFS,KAEEC,EAFF,OAGwBJ,mBAAS,IAHjC,mBAGTK,EAHS,KAGKC,EAHL,KAKVC,EAAe,uCAAG,gCAAAC,EAAA,6DACtBJ,GAAa,GADS,kBHSIvB,EAAa,eGTjB,cAId4B,EAJc,gBHUI5B,EAAa,eGVjB,OAKd6B,EALc,OAOdC,EAAiBF,EAAgBb,KAAI,SAAAR,GAAI,kCAC1CA,GAD0C,IAE7CG,KAAMmB,EAAgBE,MAAK,SAAArB,GAAI,OAAIA,EAAKO,KAAOV,EAAKyB,eAGtDX,EAASS,GAZW,kDAcpBL,EAAgB,6BAdI,QAiBtBF,GAAa,GAjBS,0DAAH,qDAoBrB,OACE,yBAAKf,UAAU,QACb,6CAEkB,IAAjBY,EAAMa,OACL,oCACE,4BACEC,KAAK,SACL1B,UAAU,eACV2B,QAAST,EACTU,SAAUd,GAETA,EAAY,aAAe,QAG7BE,GAAgB,0BAAMhB,UAAU,eAAegB,IAGlD,kBAAC,EAAD,CAAUV,SAAUM,MC7C5BiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.494ab386.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport interface User {\n  id: number;\n  name: string;\n}\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user?: User;\n}\n\nconst getAll = <T>(url: string): Promise<T[]> => {\n  return fetch(API_URL + url)\n    .then(response => response.json());\n}\n\nexport const getTodos = () => getAll<Todo>('/todos.json');\nexport const getUsers = () => getAll<User>('/users.json');\n","import React from 'react';\nimport { Todo } from '../../helpers/api';\nimport './TodoCard.css';\n\ntype Props = {\n  todo: Todo;\n}\n\nexport const TodoCard: React.FC<Props> = ({ todo }) => (\n  <li className=\"todo__item\">\n    <h2 className=\"todo_item-title\">{todo.title}</h2>\n    <p className=\"todo__user\">{todo.user? todo.user.name : 'Unknown'}</p>\n    {todo.completed\n      ? <div className=\"todo__item-completed--true\">Completed</div>\n      : <div className=\"todo__item-completed--false\">Not completed</div>\n    }\n  </li>\n)\n","import React from 'react';\nimport { Todo } from '../../helpers/api';\nimport { TodoCard } from '../TodoCard/TodoCard';\nimport './TodoList.css';\n\ntype Props = {\n  todoList: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todoList }) => (\n  <ul className=\"todo__list\">\n    {todoList.map((todo: Todo) => (\n      <TodoCard todo={todo} key={todo.id} />\n    ))}\n  </ul>\n)\n\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getUsers, getTodos, Todo } from './helpers/api';\nimport { TodoList } from './components/TodoList/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleLoadClick = async () => {\n    setIsLoading(true);\n\n    try {\n      const todosFromServer = await getTodos();\n      const usersFromServer = await getUsers();\n\n      const todosWithUsers = todosFromServer.map(todo => ({\n        ...todo,\n        user: usersFromServer.find(user => user.id === todo.userId),\n      }));\n\n      setTodos(todosWithUsers);\n    } catch (exeption) {\n      setErrorMessage('Network error, try again.');\n    }\n\n    setIsLoading(false);\n  }\n\n  return (\n    <div className=\"todo\">\n      <h1>List of Todos</h1>\n\n      {todos.length === 0 ? (\n        <>\n          <button\n            type=\"button\"\n            className=\"todo__button\"\n            onClick={handleLoadClick}\n            disabled={isLoading}\n          >\n            {isLoading ? 'Loading...' : 'Load'}\n          </button>\n\n          {errorMessage && <span className=\"todo__error\">{errorMessage}</span>}\n        </>\n      ) : (\n        <TodoList todoList={todos} />\n      )}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}