{"version":3,"sources":["helpers/api.ts","App.tsx","index.tsx"],"names":["getAll","url","fetch","then","response","json","App","useState","todos","setTodos","handleLoadClick","a","todosFromServer","usersFromServer","todosWithUsers","map","todo","user","find","id","userId","type","onClick","key","checked","completed","disabled","title","name","ReactDOM","render","document","getElementById"],"mappings":"sPAeMA,G,MAAS,SAAIC,GACjB,OAAOC,MAhBO,uCAgBSD,GACpBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YCwBhBC,EApCH,WAAO,IAAD,EACUC,mBAAiB,IAD3B,mBACTC,EADS,KACFC,EADE,KAGVC,EAAe,uCAAG,gCAAAC,EAAA,sEDYIX,EAAa,UCZjB,cAChBY,EADgB,gBDaIZ,EAAa,UCbjB,OAEhBa,EAFgB,OAIhBC,EAAiBF,EAAgBG,KAAI,SAAAC,GAAI,kCAC1CA,GAD0C,IAE7CC,KAAMJ,EAAgBK,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOH,EAAKI,eAGtDX,EAASK,GATa,2CAAH,qDAYrB,OACE,6BACE,oCAEA,4BAAQO,KAAK,SAASC,QAASZ,GAA/B,QAIA,4BACGF,EAAMO,KAAI,SAAAC,GAAI,OACb,wBAAIO,IAAKP,EAAKG,IACZ,2BAAOE,KAAK,WAAWG,QAASR,EAAKS,UAAWC,UAAQ,IACvDV,EAAKW,MAAQ,IAFhB,IAGIX,EAAKC,KAAMD,EAAKC,KAAKW,KAAO,UAHhC,WC1BVC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.45a34dbc.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport interface User {\n  id: number;\n  name: string;\n}\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user?: User;\n}\n\nconst getAll = <T>(url: string): Promise<T[]> => {\n  return fetch(API_URL + url)\n    .then(response => response.json());\n}\n\nexport const getTodos = () => getAll<Todo>('/todos');\nexport const getUsers = () => getAll<User>('/users');\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getUsers, getTodos, Todo } from './helpers/api';\n\nconst App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const handleLoadClick = async () => {\n    const todosFromServer = await getTodos();\n    const usersFromServer = await getUsers();\n\n    const todosWithUsers = todosFromServer.map(todo => ({\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId),\n    }));\n\n    setTodos(todosWithUsers);\n  }\n\n  return (\n    <div>\n      <h1>List</h1>\n\n      <button type=\"button\" onClick={handleLoadClick}>\n        Load\n      </button>\n\n      <ul>\n        {todos.map(todo => (\n          <li key={todo.id}>\n            <input type=\"checkbox\" checked={todo.completed} disabled />\n            {todo.title + ' '} \n            ({todo.user? todo.user.name : 'Unknown'})\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}